[
"PEP8に準拠しているか（インデント、空白、命名規則）",
"変数名・関数名が意味を持っているか",
"コメントが適切に記述されているか",
"関数・クラスが適切な長さに保たれているか",
"ネストが深すぎないか",
"ドキュメンテーション文字列（docstring）があるか",
"関心の分離（SoC）がされているか",
"単一責任の原則（SRP）に従っているか",
"関数の粒度が適切か",
"再利用性のあるコードになっているか",
"ハードコードされた値が定数化されているか",
"設定やパラメータが外部化されているか",
"例外処理が適切に行われているか",
"エラーメッセージが明確か",
"入力値の検証・バリデーションがされているか",
"リソース解放（ファイル、DB接続など）が確実に行われているか",
"スレッドセーフ・非同期処理が適切か",
"不要な計算やループがないか",
"データ構造の選定が適切か（list vs set vs dictなど）",
"大きなデータ処理に効率的なアルゴリズムを使っているか",
"ユニットテストが存在するか",
"関数やクラスがテストしやすい設計か",
"モック・スタブなどが適切に使われているか",
"副作用が少ないコードか（純粋関数）",
"型ヒント（type hints / annotations）が記述されているか",
"不要なimportがないか",
"相対importと絶対importが一貫しているか",
"外部ライブラリの依存が最小限に抑えられているか",
"パッケージ構成が適切か（例：init.pyの活用）",
"実行して期待通りの挙動をするか（ロジックのバグがないか）"
]